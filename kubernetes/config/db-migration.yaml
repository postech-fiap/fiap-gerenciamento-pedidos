apiVersion: v1
kind: ConfigMap
metadata:
  name: db-migration
data:
  initdb.sql: |
    create database if not exists gerenciamento_pedidos_db;
    use gerenciamento_pedidos_db;
    
    create table if not exists cliente (
      id bigint auto_increment,
      cpf char(11) not null,
      email varchar(100) not null,
      nome varchar(100) not null,
      constraint pk_cliente primary key (id),
      constraint uc_cliente_cpf unique (cpf)
    );
    
    create table if not exists produto (
      id bigint auto_increment,
      valor decimal(10,2) not null,
      nome varchar(100) not null,
      categoria enum('LANCHE', 'ACOMPANHAMENTO', 'BEBIDA', 'SOBREMESA') not null,
      disponivel bit(1) not null,
      excluido bit(1) not null,
      descricao varchar(1000),
      tempo_preparo_minutos int not null,
      constraint pk_produto primary key (id)
    );
    
    create table if not exists imagem (
      id bigint auto_increment,
      produto_id bigint not null,
      caminho varchar(100) not null,
      constraint pk_imagem primary key (id),
      constraint fk_imagem_produto foreign key (produto_id) references produto (id) on delete restrict on update restrict
    );
    
    create table if not exists pedido (
      id bigint auto_increment,
      data_hora timestamp not null default now(),
      status enum('PENDENTE', 'RECEBIDO', 'EM_PREPARACAO', 'PRONTO', 'FINALIZADO') not null,
      cliente_id bigint,
      tempo_espera_minutos int not null,
      numero char(4) not null,
      constraint pk_pedido primary key (id),
      constraint fk_pedido_cliente foreign key (cliente_id) references cliente (id) on delete restrict on update restrict
    );
    
    create table if not exists pedido_produto (
      id bigint auto_increment,
      pedido_id bigint,
      produto_id bigint,
      valor_pago decimal(10,2) not null,
      quantidade int not null,
      comentario varchar(1000),
      constraint pk_pedido_produto primary key (id),
      constraint fk_pedido_produto_pedido foreign key (pedido_id) references pedido (id) on delete restrict on update restrict,
      constraint fk_pedido_produto_produto foreign key (produto_id) references produto (id) on delete restrict on update restrict
    );
    
    create table if not exists pagamento (
      id bigint auto_increment,
      data_hora timestamp not null default now(),
      status enum('PENDENTE', 'APROVADO', 'REPROVADO') not null,
      qr_code varchar(255) not null,
      valor_total decimal(10,2) not null,
      pedido_id bigint not null,
      constraint pk_pagamento primary key (id),
      constraint fk_pagamento_pedido foreign key (pedido_id) references pedido (id) on delete restrict on update restrict
    );
    
    insert into cliente (id, cpf, nome, email)
    values (1, '56378816425', 'Fulano', 'fulano@gmail.com');
    
    insert into produto (id, nome, descricao, categoria, valor, tempo_preparo_minutos, disponivel, excluido)
    values (1, 'Hamburger Completo', 'Muito saboroso', 'LANCHE', 35.9, 20, true, false),
    (2, 'Batata Frita', 'Com sal', 'ACOMPANHAMENTO', 10.9, 10, true, false),
    (3, 'Suco de Uva', 'Com gelo', 'BEBIDA', 7.9, 0, true, false),
    (4, 'Pudim', 'Com calda de caramelo', 'SOBREMESA', 15.9, 5, true, false);
    
    insert into imagem (id, produto_id, caminho)
    values (1, 1, 'hamburguer-completo.png'),
    (2, 2, 'batata-frita.png'),
    (3, 3, 'suco-uva.png'),
    (4, 4, 'pudim.png');
    
    insert into pedido (id, data_hora, status, cliente_id, tempo_espera_minutos, numero)
    values (1, now(), 'RECEBIDO', 1, 20, '0001'),
    (2, now(), 'EM_PREPARACAO', 1, 10, '0002'),
    (3, now(), 'PRONTO', 1, 5, '0003'),
    (4, now(), 'FINALIZADO', 1, 5, '0004');
    
    insert into pedido_produto (id, pedido_id, produto_id, valor_pago, quantidade, comentario)
    values (1, 1, 1, 35.9, 1, 'Sem cebola'),
    (2, 1, 2, 10.9, 1, null),
    (3, 1, 3, 7.9, 1, null),
    (4, 1, 4, 15.9, 1, null),
    (5, 2, 2, 10.9, 1, null),
    (6, 3, 4, 15.9, 1, null),
    (7, 4, 4, 15.9, 1, null);
    
    insert into pagamento (pedido_id, data_hora, status, qr_code, valor_total)
    values (1, now(), 'REPROVADO', '', 0),
    (2, now(), 'APROVADO', '', 0),
    (3, now(), 'APROVADO', '', 0),
    (4, now(), 'APROVADO', '', 0);
